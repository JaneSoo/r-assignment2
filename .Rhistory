geom_density(alpha = 0.1)
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, lines = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = lines)) +
geom_density(alpha = 0.3)
a<- density(body.f.height)
plot(a)
a<- density(body.f.neck)
b<- density(body.f.height)
plot(a,b)
a
b
plot(density(body.f.height))
lines(density(body.f.neck))
line(density(body.f.neck))
plot(density(body.f.height))
line(density(body.f.neck))
plot(density(body.f.height))
lines(density(body.f.neck))
plot(density(body.f.height))
lines(density(body.f.neck))
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, lines = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = lines)) +
geom_density(alpha = 0.3)
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, lines = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = lines)) +
geom_density()
dat <- data.frame(dens = c(body.f.neck, body.f.height)
, lines = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = lines)) +
geom_density()
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = body)) +
geom_density()
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = body)) +
geom_density(adjust=1.5, alpha=0.2)
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = body)) +
geom_density(adjust=1.5, alpha=0.2)
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = body)) +
geom_density(adjust=1.5, alpha=0.3)
library(ggplot2)
dat <- data.frame(dens = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = dens, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
ggtitle("Density distribution")
min(body.f.height)
max(body.f.height)
min(body.f.neck)
max(body.f.neck)
neck <- density(body.f.neck)
plot(neck)
height <- density(body.f.height)
plot(height)
library(ggplot2)
dat <- data.frame(measurement = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 50))
library(ggplot2)
dat <- data.frame(measurement = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 200))
plot(neck)
plot(body)
plot(height)
library(ggplot2)
dat <- data.frame(measurement = c(body.f.height, body.f.neck)
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
plot(density(body.f.height))
lines(density(body.f.neck))
density(body.f.height)
library(ggplot2)
dat <- data.frame(measurement = c(rnorm(n), rnorm(n, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
library(ggplot2)
dat <- data.frame(measurement = c(rnorm(n, mean(body.f.height), sd(body.f.height)), rnorm(n, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
library(ggplot2)
dat <- data.frame(measurement = c(rnorm(n), rnorm(n, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
library(ggplot2)
dat <- data.frame(measurement = c(rnorm(n), rnorm(n, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 200))
library(ggplot2)
dat <- data.frame(measurement = c(rnorm(n), rnorm(n, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(rnorm(n), rnorm(n, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
dnorm()
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
plot(density(body.f.height))
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height), dnorm(body.f.neck))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height), dnorm(body.f.neck))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
plot(neck)
plot(height)
library(MASS)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, .5, .5, 1), 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
contour(bivn.kde)
image(bivn.kde)
persp(bivn.kde, phi = 45, theta = 30)
image(bivn.kde); contour(bivn.kde, add = T)
persp(bivn.kde, phi = 45, theta = 30, shade = .1, border = NA)
library(MASS)
bivn <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1, .5, .5, 1), 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
contour(bivn.kde)
image(bivn.kde)
image(bivn.kde)
persp(bivn.kde, phi = 45, theta = 30)
image(bivn.kde); contour(bivn.kde, add = T)
persp(bivn.kde, phi = 45, theta = 30, shade = .1, border = NA)
mean(body.f.height)
mean(body.f)
library(MASS)
bivn <- mvrnorm(n, mu = c(mean(body.f.neck), mean(body.f.height)), Sigma = matrix(sd(body.f.neck), sd(body.f.height)))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
contour(bivn.kde)
library(MASS)
bivn <- mvrnorm(n, mu = c(mean(body.f.neck), mean(body.f.height)), Sigma = matrix(sd(body.f.neck), sd(body.f.height)))
library(MASS)
bivn <- mvrnorm(n, mu = c(mean(body.f.neck), mean(body.f.height)), Sigma = matrix(c(sd(body.f.neck), sd(body.f.height)), 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
contour(bivn.kde)
library(MASS)
bivn <- mvrnorm(n, mu = c(mean(body.f.neck), mean(body.f.height)), Sigma = matrix(c(1, .5, .5, 1), 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
contour(bivn.kde)
library(fMultivar)
install.packages("fMultivar")
library(fMultivar)
library(fMultivar)
x <- (-40:40)/10
X <- grid2d(x)
z <- dnorm2d(X$x, X$y, rho = 0.5)
ZD <- list(x = x, y = x, z = matrix(z, ncol = length(x)))
# Perspective Density Plot:
persp(ZD, theta = -40, phi = 30, col = "steelblue")
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
X
z <- dnorm2d(body.f.height, body.f.neck, rho = rho.est)
ZD <- list(x = body.f.height, y = body.f.neck, z = matrix(z, ncol = length(x)))
# Perspective Density Plot:
persp(ZD, theta = -40, phi = 30, col = "steelblue")
x <- (body.f.height:body.f.neck)/10
x <- (-body.f.height:body.f.neck)/10
X <- grid2d(x)
X
x <- (-body.f.height:body.f.neck)/10
x
z <- dnorm2d(body.f.height, body.f.neck, rho = rho.est)
z
z <- dnorm2d(X$x, X$y, rho = 0.5)
z
x <- (-40:40)/10
X <- grid2d(x)
z <- dnorm2d(X$x, X$y, rho = 0.5)
z
z <- dnorm2d(body.f.height, body.f.neck, rho = rho.est)
z
library(fMultivar)
x <- (-40:40)/10
X <- grid2d(x)
z <- dnorm2d(X$x, X$y, rho = 0.5)
z <- dnorm2d(body.f.height, body.f.neck, rho = rho.est)
ZD <- list(x = x, y = x, z = matrix(z, ncol = length(x)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
z <- dnorm2d(body.f.height, body.f.neck, rho = rho.est)
ZD <- list(x = x, y = x, z = matrix(z, ncol = length(x)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
length(x)
x
z <- dnorm2d(body.f.height, body.f.neck, rho = rho.est)
ZD <- list(x = body.f.height, y = body.f.height, z = matrix(z, ncol = length(body.f.height)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
z
dnorm2d(body.f.height, body.f.neck, rho = rho.est)
library(fMultivar)
z <- dnorm2d(x=body.f.height, y=body.f.neck, rho = rho.est)
ZD <- list(x = x, y = x, z = matrix(z, ncol = length(x)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
dnorm2d()
z
ZD
ZD
z <- dnorm2d(x=body.f.height, y=body.f.neck, rho = rho.est)
#set working directory
setwd(getwd())
#read data from file txt
body <- read.table(file = 'body-measurements.txt', header = T)
#get only body height of female
body.f.height <- body[body$sex == 'f', 'body.H']
#get only neck of female
body.f.neck <- body[body$sex == 'f', 'neck.C']
#na.omit will clean data that have NA value
body.f.height <- na.omit(body.f.height)
body.f.neck <- na.omit(body.f.neck)
#create dataframe for body height and neck
df <- data.frame(body.f.height, body.f.neck)
#get length of the data
n.x <- length(body.f.height)
n.y <- length(body.f.neck)
n <- n.x <- n.y
#value of rho from null hypothesis
rho0 <- 0
#significant level
alpha <- 0.05
#calculate the estimate of rho using function cor()
rho.est <- cor(body.f.height, body.f.neck, method = c("pearson", "kendall", "spearman"))
#calculate ZR using Fisher Z -variable
ZR <- 1/2 * log((1+ rho.est)/(1- rho.est))
#calculate the value of xi
xi <- 1/2 * log((1+ rho0)/(1-rho0))
#calculate the value of test statistics
zW <- sqrt(n -3)*(ZR - xi)
# round(zW, 5) => 1.39395
@
Result: $zw = 1.39395$ \newline
\noindent 3. Calculate the critical region and make your decision.
<<>>=
#calculate critical value using qnorm for lower bound
z.CR.l <-qnorm(alpha/2, lower.tail = T)
#calculate critical value using qnorm for upper bound
z.CR.u <-qnorm(alpha/2, lower.tail = F)
#calculate the p-value
p.val.zW <- 2 * (1 - pnorm(abs(zW)))
library(fMultivar)
z <- dnorm2d(x=body.f.height, y=body.f.neck, rho = rho.est)
ZD <- list(x = x, y = x, z = matrix(z, ncol = length(x)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
z <- dnorm2d(x=body.f.height, y=body.f.neck, rho = rho.est)
ZD <- list(x = body.f.height, y = body.f.height, z = matrix(z, ncol = length(body.f.height)))
z
ZD
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
z <- dnorm2d(x=body.f.height, y=body.f.neck, rho = rho.est)
ZD <- list(x = body.f.height, y =body.f.neck, z = matrix(z, ncol = length(body.f.height)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
ZD
z <- dnorm2d(x=body.f.neck, y=body.f.height, rho = rho.est)
ZD <- list(x = body.f.neck, y =body.f.neck, z = matrix(z, ncol = length(body.f.neck)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
ZD
z <- dnorm2d(x=body.f.neck, y=body.f.height, rho = rho.est)
ZD <- list(x = body.f.neck, y =body.f.height, z = matrix(z, ncol = length(body.f.neck)))
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
body.f.height
ZD
# Contour Density Plot:
contour(ZD, main="Bivariate Normal Density")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_jitter() +  # using geom_jitter to avoid overplotting of points
geom_smooth() +
sepal.labels + labs(subtitle = "I. setosa data only") +
my.theme
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_jitter() +  # using geom_jitter to avoid overplotting of points
geom_smooth() +
# sepal.labels + labs(subtitle = "I. setosa data only") +
my.theme +
# geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_jitter() +  # using geom_jitter to avoid overplotting of points
geom_smooth() +
# sepal.labels + labs(subtitle = "I. setosa data only") +
# my.theme +
# geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_jitter() +  # using geom_jitter to avoid overplotting of points
# geom_smooth() +
# sepal.labels + labs(subtitle = "I. setosa data only") +
# my.theme +
# geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
library(ggplot2)
dat <- data.frame(measurement = c(dnorm(body.f.height, mean(body.f.height), sd(body.f.height)), dnorm(body.f.neck, mean(body.f.neck), sd(body.f.neck)))
, body = rep(c("Height", "Neck") ))
ggplot(dat, aes(x = measurement, fill = body)) +
geom_density2d() +
# geom_density(adjust=1.5, alpha=0.3) +
# scale_x_continuous(name = "Height (mm)", limits = c(200, 1900), breaks = seq(200, 1900, 500))
ggtitle("Density distribution")
fhat <- kde(x=iris[,2:3])
library(MASS)
fhat <- kde(x=iris[,2:3])
library(MASS)
data(chorley)
data("iris3")
data("chorley")
data
a <- data("warpbreaks")
a
a <- data(warpbreaks)
a
n = 2000; m1 = 0; m2 = 0; s1 =1; s2 = 1;
plotcor = function(r){
x = rnorm(n,m1,s1)
y = s2*r*(x-m1)/s1+m2 + s2*rnorm(n,0,sqrt(1-r^2))
plot(x,y, main = paste('Correlation =', r))
abline(lm(y~x), col = 'red')
}
par(mfrow=c(3,3),oma=c(0,0,2,0))
for (i in c(-1,-.75,-.5,-0.25,0,0.25,0.5,.75,1)){
plotcor(i)
}
n = n; m1 = mean(body.f.height); m2 = body.f.neck; s1 =sd(body.f.height); s2 = body.f.neck;
plotcor = function(r){
x = rnorm(n,m1,s1)
y = s2*r*(x-m1)/s1+m2 + s2*rnorm(n,0,sqrt(1-r^2))
plot(x,y, main = paste('Correlation =', r))
abline(lm(y~x), col = 'red')
}
par(mfrow=c(3,3),oma=c(0,0,2,0))
for (i in c(-1,-.75,-.5,-0.25,0,0.25,0.5,.75,1)){
plotcor(i)
}
library(MASS)
bivn <- mvrnorm(n, mu = c(mean(body.f.neck), mean(body.f.height)), Sigma = matrix(c(1, .5, .5, 1), 2))
bivn.kde <- kde2d(bivn[,1], bivn[,2], n = 50)
contour(bivn.kde)
image(bivn.kde)
persp(bivn.kde, phi = 45, theta = 30)
image(bivn.kde); contour(bivn.kde, add = T)
persp(bivn.kde, phi = 45, theta = 30, shade = .1, border = NA)
sd(body.f.height)
sd(body.f.neck)
library(MASS)
bivn <- mvrnorm(n, mu = c(mean(body.f.neck), mean(body.f.height)), Sigma = matrix(c(sd(body.f.neck), sd(body.f.height)), 2))
library(MASS)
bivn <- mvrnorm(n, mu = c(mean(body.f.neck), mean(body.f.height)), Sigma = matrix(c(sd(body.f.neck), sd(body.f.height), 1, 1), 2))
library(MASS)
data(iris)
fhat <- kde(x=iris[,2:3])
install.packages("kde1d")
library(MASS)
data(iris)
fhat <- kde(x=iris[,2:3])
fhat <- kde1d(x=iris[,2:3])
fhat <- kde2d(x=iris[,2:3])
iris
iris[,2:3]
library(kde1d)
detach("package:kde1d", unload = TRUE)
library(MASS)
data(iris)
fhat <- kde(x=iris[,2:3])
library(MASS)
library(ks)
library(rgl)
install.packages("kde1d")
install.packages(c("ks", "rgl"))
library(MASS)
library(ks)
library(rgl)
data(iris)
fhat <- kde(x=iris[,2:3])
plot(fhat, display="filled.contour", cont=seq(10,90,by=10))
plot(fhat, display="persp", thin=3, border=1, col="white")
df
data(iris)
fhat <- kde(x=df)
plot(fhat, display="filled.contour", cont=seq(10,90,by=10))
plot(fhat, display="persp", thin=3, border=1, col="white")
library(MASS)
library(ks)
library(rgl)
data(iris)
fhat <- kde(x=df)
plot(fhat, display="filled.contour", cont=seq(10,90,by=10))
plot(fhat, display="filled.contour")
library(MASS)
library(MASS)
# library(ks)
# library(rgl)
data(iris)
fhat <- kde(x=df)
plot(fhat, display="filled.contour")
library(MASS)
data(iris)
fhat <- kde(x=iris[,2:3])
plot(fhat, display="filled.contour", cont=seq(10,90,by=10))
plot(fhat, display="persp", thin=3, border=1, col="white")
library(MASS)
data(iris)
fhat <- kde(x=iris[,2:3])
plot(fhat, display="filled.contour", cont=seq(10,90,by=10))
library(MASS)
data(iris)
fhat <- kde(x=iris[,2:3])
plot(fhat, display="filled.contour", cont=seq(10,90,by=10))
